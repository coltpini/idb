{"version":3,"sources":["../idbify.js"],"names":[],"mappings":"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","file":"idbify.es5.js","sourcesContent":["export default class Idbify {\n  constructor({schema, storeName, v}){\n    this.schema = schema;\n    this.storeName = storeName;\n    this.v = v;\n    this.go();\n  }\n  go(){\n    return new Promise( (res, rej) => {\n  \t\tconst iReq = indexedDB.open(this.storeName, this.v);\n  \t\tiReq.addEventListener(\"error\", e => rej(e.target.error));\n  \t\tiReq.addEventListener(\"success\", e => res(e.target.result));\n  \t\tiReq.addEventListener(\"upgradeneeded\", e => this.upgrade(e.target.result));\n  \t\tiReq.addEventListener('blocked', (e) => rej('blocked') );\n  \t} )\n  }\n  upgrade(db){\n    let options = this.schema[0].options || {};\n    if(this.schema[0].type === 'keyPath'){\n      options.keyPath = this.schema[0].name;\n    }\n    const os = db.createObjectStore(this.storeName, options);\n\n    this.schema.filter( (item) => item.type === 'index')\n    .forEach( item =>  os.createIndex(item.name, item.keyPath || item.name, item.options) );\n  }\n  getTransaction(db, type=\"readwrite\"){\n    const trx = db.transaction(this.storeName, type);\n    const store = trx.objectStore(this.storeName);\n    return { trx, store };\n  }\n  put(data){\n    return this.go().then( db => {\n      const {trx, store} = this.getTransaction(db);\n      !Array.isArray(data) && (data = [data]);\n      data.forEach( item => store.put(item))\n      return new Promise( (res, rej) =>{\n        trx.oncomplete = () => {\n          db.close();\n          res('completed');\n        }\n        trx.onerror = (e) => rej(e.target.error);\n      })\n    });\n  }\n  get(key){\n    return this.go().then( db => {\n      const {trx, store} = this.getTransaction(db, \"readonly\");\n      const read = store.get(key);\n      return new Promise( (res,rej) => {\n        read.onsuccess = () => res(read.result);\n        read.onerror = () => rej('failed to read');\n      })\n    });\n  }\n  find({index, term, type=\"key\"}){\n    return this.go().then( db => {\n      const {trx, store} = this.getTransaction(db, \"readonly\");\n      const context = index ? store.index(index) : store;\n      const cursor = term ? context.openCursor(IDBKeyRange.only(term)) : context.openCursor();\n      return new Promise( (res, rej) => {\n        let results = [];\n        cursor.onsuccess = (e) => {\n          const c = e.target.result;\n          if(c){\n            results.push(type === 'value' ? c.value : c.key);\n            c.continue();\n          }\n          else {\n            res(results);\n          }\n        }\n        cursor.onerror = () => rej('finding failed');\n      })\n    })\n  }\n  delete(key){\n    return this.go().then( db => {\n      const {trx, store} = this.getTransaction(db);\n      const remove = store.delete(key);\n      return new Promise( (res,rej) => {\n        remove.onsuccess = () => res('deleted');\n        remove.onerror = () => rej('failed to delete');\n      })\n    });\n  }\n}\n"]}